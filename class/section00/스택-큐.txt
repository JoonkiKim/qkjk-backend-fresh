스택에서 말하는 Last in First Out이 무슨뜻이냐면

[중요]
아래의 함수를 보면 안에 있는 qqq가 먼저 스레드로 가서 실행되고 그게 끝나야 바깥에 있는 onClickLoop가 나중에 스레드로 가서 실행되는데(내가 알고 있던 내용), 
이때 안에 있는게 스택에 Last로 들어온거고 바깥에 있는게 First로 들어온거라서 Last in First Out이다

const onClickLoop = () => {

    const qqq = () => {
        
    }
}

-------------------------------------

큐 에서 콜백함수 같이 기다려야하거나 오래걸리거나 복잡한 작업을 '따로 빼뒀다가' 다시 스택으로 가져와서 실행하는건 기존대로 이해하면 됨!
(**이때 for문 같은건 큐에서 하는게 아니라 스택에서 바로 받아서 스레드에서 한다)

=> axios요청 같이 다른곳에서 api요청을 받아와야하는 것들은 스레드가 곧바로 일을 안하고 큐에 다 보내버리기 때문에 axios요청이 많은 경우 자바스크립트가 유리하다

=> 반면, for문 계산 등 머신러닝이나 알고리즘 계산이 많이 있는 경우 자바스크립트가 바로 계산을 하기 때문에 이 경우에는 자바스크립트가 적합하지 않다

--------------------------------------
스택 - 기본 담아놓는 통
큐 - 복잡하고 오래걸리는거 담아놓는 통
스레드 - 일꾼



///
하나의 일감이 엄청 큰 경우(for문 900000번 반복처럼) 싱글스레드는 그거 다 처리할때까지 기다리게 되니까 불리한데, 멀티스레드는 한명한테 그거 맡겨놓고 다른애들이 다른 작업하면 되니까 이 경우는 멀티스레드가 유리하다


-----------------
마이크로큐 vs 매크로큐
마이크로큐가 무조건 먼저 실행된다
매크로큐를 실행하다가 마이크로큐가 생기면 마이크로큐를 먼저 실행한다