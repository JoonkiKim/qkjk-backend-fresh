썸네일 트리거란

썸네일로 이미지를 보여주고 싶을때 이미지를 작은 크기로 별도로 만들지 않고 알아서 사이즈를 조절해주는 역할을 하는 것!


[Cloud Function만드는 방법]
https://cloud.google.com/run/docs/quickstarts/functions/deploy-functions-console?hl=ko
위의 링크로 들어가기

- Cloud Run으로 이동 버튼 클릭

- 함수 작성 버튼 클릭

- 서비스 이름 작성
- 리전 설정
- 런타임은 Node22 등 최신으로 설정

- ** 트리거 추가 클릭
- Cloud Storage트리거 선택

- google.cloud.storage.object.v1.finalized
로 설정되어있는지 확인 (이게 제일 중요함!!)

- 버킷은 기존 메인 버킷으로 설정하기

- 서비스 계정 선택하기 -> default로 설정되어있는거 하기



- 이 트리거에서 Google 소스를 통해 이벤트를 수신하려면 62542708089-compute@developer.gserviceaccount.com 서비스 계정에 roles/eventarc.eventReceiver 역할을 부여해야 합니다.
-> 권한 부여 누르기

- Allow unauthenticated invocations 누르기



[썸네일 트리거 이제 제대로 설정해보자]
소스 안에 index.js에 03-generateThumbnail-multi-date.js 안에 있는 코드를 넣기
pakage.json은 아래의 코드를 넣기

{
  "dependencies": {
    "@google-cloud/functions-framework": "^3.0.0",
      "@google-cloud/storage": "^7.16.0",
      "sharp": "^0.34.2"

  }
}

------------------
브라우저에서 이미지를 업로드 -> 백엔드로 전송되면 메인 스토리지에 이미지 업로드
메인 스토리지에서 썸네일 트리거 작동 -> index.js실행되며 썸네일 스토리지에 이미지 저장됨





















// 로그를 보고 싶으면 Cloud Run에서 서비스 -> 로그를 보면됨






아래 순서가 2025-년 현재 Google Cloud Console(새 UI)에서 “Cloud Storage → 파일 업로드 완료” 트리거를 갖는 함수(= 2세대 Cloud Functions, 지금은 Cloud Run functions 로 표기)를 만드는 방법입니다. 옛 UI에서 하던 작업을 그대로 옮겨놓은 것이니 그대로 따라 하면 됩니다.

1. 콘솔에서 함수 “골격” 만들기
Cloud Console → ☰ Navigation menu → “Cloud Run” → “Functions” 로 이동합니다.
Cloud Functions v2 가 Cloud Run functions로 통합되었기 때문에, “Cloud Run” 메뉴 안으로 들어왔다는 점이 예전과 다릅니다. 
cloud.google.com

Write a function 버튼을 클릭합니다. 
cloud.google.com

Service name (예: hello-gcs)과 Region 을 지정합니다.

Runtime 은 원하는 Node.js 버전을 선택합니다(예: Node 18).

Trigger 영역에서

Trigger type = “Event”

Event provider = Cloud Storage

Event type = “google.cloud.storage.object.v1.finalized” (UI에는 “Finalize (create)” 로 표시)

Bucket 에서 감시할 버킷을 선택

필요하면 Event filters 로 contentType starts with image/ 등 추가

2. 코드 입력
Source 탭에서 “Inline editor” 모드를 그대로 두고 index.js(자동 생성) 파일을 열어 아래 코드로 교체합니다.

js
복사
편집
/**
 * Triggered when a file is **created or finalized** in the selected Cloud Storage bucket.
 *
 * 2세대 Cloud Functions(Node 18+)은 CloudEvent 형식을 사용합니다.
 * @param {import('@google-cloud/functions-framework').CloudEvent} cloudEvent
 */
exports.helloGCS = (cloudEvent) => {
  console.log('안녕하세요! 저는 트리거입니다 !!!');

  // CloudEvent의 data 항목에는 객체 메타데이터가 담깁니다.
  const {bucket, name, contentType, size} = cloudEvent.data || {};
  console.log(`Processing file: ${name} (bucket: ${bucket})`);
  console.log(`Content-Type: ${contentType}, Size: ${size} bytes`);

  // 전체 이벤트·메타데이터를 보고 싶을 때
  console.log('Full CloudEvent:', JSON.stringify(cloudEvent, null, 2));
};
entry point(함수 이름)는 helloGCS 로 맞춰주세요.

3. 빌드 및 배포
Deploy 를 누르면 콘솔이 자동으로 Cloud Build→Artifact Registry→Cloud Run 순서로 이미지를 빌드·배포합니다.

배포가 끝나면 Functions > hello-gcs 상세 화면에서 Trigger URI 와 최근 실행 로그를 확인할 수 있습니다.

사용 중 헷갈리기 쉬운 변경점 요약
2023년 이전(1세대)	2025년 현재(2세대, Cloud Run functions)
메뉴: Cloud Functions	메뉴: Cloud Run → Functions
트리거 설정 화면 안에서 “Cloud Storage” 선택	“Event” → Eventarc 기반 Event provider = Cloud Storage
event / context 매개변수	단일 CloudEvent 객체
배포 옵션 중 1세대 / 2세대 스위치 존재	새 콘솔에서는 기본이 2세대

이렇게 설정하면 예전 방식과 같은 “파일 업로드 시 자동 실행” 함수가 완전히 동일하게 동작합니다. 필요하면 npm install sharp 등의 라이브러리를 추가해 썸네일 생성 로직을 넣어주시면 됩니다.