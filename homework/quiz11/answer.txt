1-1
string
number
boolean

1-2
string[]
number[]
(number | string)[]
(boolean | string)[]

1-3
a)
interface ICreateBoardInput {
    writer: string
    title: string
    contents: string
    
}

const createBoardInput: ICreateBoardInput = {
     writer: “영희”,
     title: “좋은 날씨 입니다~”,
     contents: “오늘은 특히 더 날씨가 좋네요^^”
}

b)
interface IUpdateBoardInput  {
    writer: string
    title?: string
    contents: string   

}

const updateBoardInput1: _____ = {
     writer: “영희”,
     title: “좋은 날씨 입니다~”,
     contents: “오늘은 특히 더 날씨가 좋네요^^”
}

const updateBoardInput2: _____ = {
     writer: “훈이”,
     contents: “기존에 작성한 글 내용 일부가 수정됐네요”
}




2. DI / IOC 단답형 퀴즈 
2-1-1
Dependency
2-1-2
아니요. 컨트롤을 각각 두번 선언하면 싱글톤이 아닙니다
2-1-3
Inversion of control

2-1-4
Nest.js에서 IOC 컨테이너가 DI를 해주고 있나요?
답 : 네! IOC '컨테이너'가 DI를 해줍니다

2-1-5
javascript 언어로 사용 가능한 Backend 프레임워크에 Nest.js 가 있습니다. java 언어로 사용 가능한 Backend 프레임워크에는 Spring 이 있습니다. 이 둘 모두 해당 프레임워크들에 IOC 컨테이너가 존재하며, DI를 지원하고 있나요?
=> 
네, NestJS(JavaScript/TypeScript) 와 Spring(Java) 모두 IoC(Inversion of Control) 컨테이너를 내장하고 있으며, DI(Dependency Injection) 을 기본적으로 지원합니다.


